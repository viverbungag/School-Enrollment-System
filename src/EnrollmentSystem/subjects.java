/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EnrollmentSystem;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class subjects extends javax.swing.JFrame {

    /**
     * Creates new form subjects
     */
    
    String finalQuery = "";
    public subjects() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SubjectSched = new javax.swing.JTextField();
        SubjectCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        SubjectDesc = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        classTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        idCB = new javax.swing.JComboBox<String>();
        ID_TF = new javax.swing.JTextField();
        code_CB = new javax.swing.JComboBox<String>();
        jLabel13 = new javax.swing.JLabel();
        Scode_TF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Ecode_TF = new javax.swing.JTextField();
        Sdesc_TF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        desc_CB = new javax.swing.JComboBox<String>();
        units_CB = new javax.swing.JComboBox<String>();
        Edesc_TF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        sched_CB = new javax.swing.JComboBox<String>();
        sched_TF = new javax.swing.JTextField();
        units_CB2 = new javax.swing.JComboBox<String>();
        units_TF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SubjectUnit = new javax.swing.JTextField();
        subjectID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel5.setText("Subject Sched");

        jLabel2.setText("Subject Code");

        jLabel3.setText("Subject Desc.");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        classTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Student Name", "Student Address", "Student Course", "Student Gender", "Student Year"
            }
        ));
        classTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(classTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filter", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel7.setText("Subject ID");

        jLabel8.setText("Subject Code");

        jLabel9.setText("Subject Description");

        jLabel10.setText("Subject Units");

        jLabel11.setText("Schedule");

        idCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<>", "<", ">", "<=", ">=" }));
        idCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idCBActionPerformed(evt);
            }
        });

        ID_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_TFActionPerformed(evt);
            }
        });
        ID_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ID_TFKeyReleased(evt);
            }
        });

        code_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        code_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                code_CBActionPerformed(evt);
            }
        });

        jLabel13.setText("Starts");

        Scode_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Scode_TFActionPerformed(evt);
            }
        });
        Scode_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Scode_TFKeyReleased(evt);
            }
        });

        jLabel14.setText("Ends");

        Ecode_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ecode_TFActionPerformed(evt);
            }
        });
        Ecode_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Ecode_TFKeyReleased(evt);
            }
        });

        Sdesc_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdesc_TFActionPerformed(evt);
            }
        });
        Sdesc_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sdesc_TFKeyReleased(evt);
            }
        });

        jLabel16.setText("Starts");

        desc_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        desc_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desc_CBActionPerformed(evt);
            }
        });

        units_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        units_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                units_CBActionPerformed(evt);
            }
        });

        Edesc_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edesc_TFActionPerformed(evt);
            }
        });
        Edesc_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Edesc_TFKeyReleased(evt);
            }
        });

        jLabel15.setText("Ends");

        sched_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        sched_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sched_CBActionPerformed(evt);
            }
        });

        sched_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sched_TFActionPerformed(evt);
            }
        });
        sched_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sched_TFKeyReleased(evt);
            }
        });

        units_CB2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<>", "<", ">", "<=", ">=" }));
        units_CB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                units_CB2ActionPerformed(evt);
            }
        });

        units_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                units_TFActionPerformed(evt);
            }
        });
        units_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                units_TFKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sched_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(sched_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(26, 26, 26)
                                .addComponent(idCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ID_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(code_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(Scode_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(Ecode_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(desc_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(Sdesc_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(Edesc_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(units_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(units_CB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(units_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ID_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(code_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Scode_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(Ecode_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(desc_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(Sdesc_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(Edesc_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(units_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(units_CB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(units_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(sched_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sched_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Subject Unit");

        jLabel1.setText("Subject ID");

        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject ID", "Subject Code", "Subject Desc.", "Subject Units", "Subject Sched", "Enrolled"
            }
        ));
        subjectTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjectTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(subjectTable);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel23.setText("Class List");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("Subject's Form");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel25)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subjectID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SubjectCode, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(SubjectDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SubjectUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SubjectSched, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(saveBtn)
                            .addComponent(deleteBtn)
                            .addComponent(updateBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(315, 315, 315)
                                .addComponent(jLabel23)))
                        .addGap(25, 25, 25)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(subjectID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(SubjectCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(SubjectDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(SubjectUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(SubjectSched, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveBtn)
                        .addGap(21, 21, 21)
                        .addComponent(deleteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(updateBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        try{
            String query = "DELETE FROM subjects";
            System.out.println(finalQuery);
            System.out.println(subjectTable.getSelectedRowCount());
            if ((finalQuery.equals("SELECT * FROM subjects") || finalQuery.equals("")) && subjectTable.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(this,"Please select a row to delete", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if (subjectTable.getSelectedRowCount() > 0){
                int idx = subjectTable.getSelectedRow();
                query += " WHERE subject_id = " + subjectTable.getValueAt(idx, 0).toString();
                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.executeUpdate();
                JOptionPane.showMessageDialog(this,"Subject Successfully Deleted");
                filter();
            }
            else{
                query += " WHERE subject_id in (SELECT subject_id from (" + finalQuery + ") as x)";
                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.executeUpdate();
                JOptionPane.showMessageDialog(this,"Subject Successfully Deleted");
                filter();
            }

        }catch(Exception ex){
            System.out.println(ex);
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:

        try{
            ResultSet rs = EnrollmentSystem.con.createStatement().executeQuery("SELECT * FROM subjects WHERE subject_id = '" + subjectID.getText() + "'");
            if (rs.next() && (!subjectID.getText().equals(subjectTable.getValueAt(subjectTable.getSelectedRow(), 0)))){
                JOptionPane.showMessageDialog(this,"Subject ID already exist! please choose another one", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                String query = "UPDATE subjects SET";
                ArrayList<String> includes = new ArrayList<>();

                if (subjectID.getText().length() > 0){
                    includes.add(" subject_id = " + subjectID.getText());
                }

                if (SubjectCode.getText().length() > 0){
                    includes.add(" subject_code = '" + SubjectCode.getText() + "'");
                }

                if (SubjectDesc.getText().length() > 0){
                    includes.add(" subject_desc = '" + SubjectDesc.getText() + "'");
                }

                if (SubjectUnit.getText().length() > 0){
                    includes.add(" subject_units = " + SubjectUnit.getText());
                }

                if (SubjectSched.getText().length() > 0){
                    includes.add(" subject_sched = '" + SubjectSched.getText() + "'");
                }

                query += String.join(",", includes);

                if (subjectTable.getSelectedRowCount() > 0){
                    int idx = subjectTable.getSelectedRow();
                    query +=  " WHERE subject_id = " + subjectTable.getValueAt(idx, 0).toString();

                }else{
                    query += " WHERE subject_id in (select subject_id from (" + finalQuery + ") as x)";
                }

                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.executeUpdate();
                JOptionPane.showMessageDialog(this,"Subject Successfully Updated");
                filter();
            }
        }catch(Exception ex){
            System.out.println(ex);
        }

    }//GEN-LAST:event_updateBtnActionPerformed

    private void classTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classTableMouseClicked

    }//GEN-LAST:event_classTableMouseClicked

    private void idCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idCBActionPerformed
        filter();
    }//GEN-LAST:event_idCBActionPerformed

    private void ID_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID_TFKeyReleased
        filter();
    }//GEN-LAST:event_ID_TFKeyReleased

    private void code_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_code_CBActionPerformed
        filter();
    }//GEN-LAST:event_code_CBActionPerformed

    private void Scode_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Scode_TFKeyReleased
        filter();
    }//GEN-LAST:event_Scode_TFKeyReleased

    private void Ecode_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Ecode_TFKeyReleased
        filter();
    }//GEN-LAST:event_Ecode_TFKeyReleased

    private void Sdesc_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sdesc_TFKeyReleased
        filter();
    }//GEN-LAST:event_Sdesc_TFKeyReleased

    private void desc_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desc_CBActionPerformed
        filter();
    }//GEN-LAST:event_desc_CBActionPerformed

    private void units_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_units_CBActionPerformed
        filter();
    }//GEN-LAST:event_units_CBActionPerformed

    private void Edesc_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Edesc_TFKeyReleased
        filter();
    }//GEN-LAST:event_Edesc_TFKeyReleased

    private void sched_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sched_CBActionPerformed
        filter();
    }//GEN-LAST:event_sched_CBActionPerformed

    private void sched_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sched_TFKeyReleased
        filter();
    }//GEN-LAST:event_sched_TFKeyReleased

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        if (subjectID.getText().length() > 0 && SubjectCode.getText().length() > 0 && SubjectDesc.getText().length() > 0 && SubjectUnit.getText().length() > 0 && SubjectSched.getText().length() > 0){
            String query = "INSERT INTO subjects VALUES (?, ?, ?, ?, ?)";
            try{
                ResultSet rs = EnrollmentSystem.con.createStatement().executeQuery("SELECT * FROM subjects WHERE subject_id = '" + subjectID.getText() + "'");
                if (rs.next()){
                    JOptionPane.showMessageDialog(this,"Subject ID already exist! please choose another one", "Error", JOptionPane.ERROR_MESSAGE);
                }else{
                    PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                    st.setInt(1, Integer.parseInt(subjectID.getText()));
                    st.setString(2, SubjectCode.getText());
                    st.setString(3, SubjectDesc.getText());
                    st.setInt(4, Integer.parseInt(SubjectUnit.getText()));
                    st.setString(5, SubjectSched.getText());

                    st.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Subject Successfully Saved");
                    updateTableSubjects();
                }
            }catch(Exception ex){
                if (ex instanceof NumberFormatException){
                    JOptionPane.showMessageDialog(this,"Please put numeric value in the ID and Unit");
                }
            }

        }else{
            JOptionPane.showMessageDialog(this,"Please fill up every field", "Subject not saved!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    
    
    private void subjectTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectTableMouseClicked
        int idx = subjectTable.getSelectedRow();
        subjectID.setText(subjectTable.getValueAt(idx, 0).toString());
        SubjectCode.setText(subjectTable.getValueAt(idx, 1).toString());
        SubjectDesc.setText(subjectTable.getValueAt(idx, 2).toString());
        SubjectUnit.setText(subjectTable.getValueAt(idx, 3).toString());
        SubjectSched.setText(subjectTable.getValueAt(idx, 4).toString());
        
        updateClassTable();
    }//GEN-LAST:event_subjectTableMouseClicked

    private void units_CB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_units_CB2ActionPerformed
        filter();
    }//GEN-LAST:event_units_CB2ActionPerformed

    private void units_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_units_TFKeyReleased
        filter();
    }//GEN-LAST:event_units_TFKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        updateTableSubjects();
    }//GEN-LAST:event_formWindowOpened

    private void ID_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_TFActionPerformed
        filter();
    }//GEN-LAST:event_ID_TFActionPerformed

    private void Scode_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Scode_TFActionPerformed
        filter();
    }//GEN-LAST:event_Scode_TFActionPerformed

    private void Ecode_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ecode_TFActionPerformed
        filter();
    }//GEN-LAST:event_Ecode_TFActionPerformed

    private void Sdesc_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdesc_TFActionPerformed
        filter();
    }//GEN-LAST:event_Sdesc_TFActionPerformed

    private void Edesc_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edesc_TFActionPerformed
        filter();
    }//GEN-LAST:event_Edesc_TFActionPerformed

    private void units_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_units_TFActionPerformed
        filter();
    }//GEN-LAST:event_units_TFActionPerformed

    private void sched_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sched_TFActionPerformed
        // TODO add your handling code here:
        filter();
    }//GEN-LAST:event_sched_TFActionPerformed
    
    public void updateClassTable(){
        
        int idx = subjectTable.getSelectedRow();
        DefaultTableModel classTableModel = (DefaultTableModel) classTable.getModel();
        classTableModel.setRowCount(0);
        
        try{
            ResultSet rsClassTable = EnrollmentSystem.con.createStatement().executeQuery(
                    "SELECT students.student_id, student_name, student_address, student_course, student_gender, student_year "
                    + "FROM students, enroll, subjects "
                    + "WHERE students.student_id = enroll.student_id and enroll.subject_id = subjects.subject_id and subjects.subject_id = " + subjectTable.getValueAt(idx, 0));
            
            while (rsClassTable.next()){
                String id = rsClassTable.getString("student_id");
                String nm = rsClassTable.getString("student_name");
                String ad = rsClassTable.getString("student_address");
                String cr = rsClassTable.getString("student_course");
                String gd = rsClassTable.getString("student_gender");
                String yr = rsClassTable.getString("student_year");      
                
                classTableModel.addRow(new String[]{id, nm, ad, cr, gd, yr});               
            } 
        }catch(Exception ex){
            
        }
    }
    
    
    
    public void updateTableSubjects(){
        DefaultTableModel subjectTableModel = (DefaultTableModel) subjectTable.getModel();

        subjectTableModel.setRowCount(0);
        try{
            ResultSet rsSubjectTable = EnrollmentSystem.con.createStatement().executeQuery("SELECT * FROM subjects");
            ResultSet rsEnrolled = EnrollmentSystem.con.createStatement().executeQuery("SELECT subjects.subject_id AS id, "
                    + "(SELECT COUNT(*) FROM students, enroll, subjects "
                    + "WHERE students.student_id = enroll.student_id and enroll.subject_id = subjects.subject_id and enroll.subject_id = id) "
                    + "AS enrolled FROM subjects");
            
            while (rsSubjectTable.next()){
                rsEnrolled.next();
                String idd = rsSubjectTable.getString("subject_id");
                String cd = rsSubjectTable.getString("subject_code");
                String ds = rsSubjectTable.getString("subject_desc");
                String un = rsSubjectTable.getString("subject_units");
                String sc = rsSubjectTable.getString("subject_sched");
                String er = rsEnrolled.getString("enrolled");
                
                subjectTableModel.addRow(new String[]{idd, cd, ds, un, sc, er});
                
            }
  
        }catch(Exception ex){
            
        }
    }
    
    
    
    public void filter(){
        DefaultTableModel subjectTableModel = (DefaultTableModel) subjectTable.getModel();
        subjectTableModel.setRowCount(0);

        
        finalQuery = "";
        boolean first = true;
        
        String id = ID_TF.getText();
        String Scode = Scode_TF.getText();
        String Ecode = Ecode_TF.getText();
        String Sdesc = Sdesc_TF.getText();
        String Edesc = Edesc_TF.getText();
        String units = units_TF.getText();
//        String enrolled = enrolled_TF.getText();
        String sched = sched_TF.getText();
        
        ArrayList<String> codeArr = new ArrayList<>();
        ArrayList<String> descArr = new ArrayList<>();
        
        
        
        if (id.length() > 0 || Scode.length() > 0 || Ecode.length() > 0 || Sdesc.length() > 0 || Edesc.length() > 0 || units.length() > 0 || sched.length() > 0){
            
            finalQuery += " WHERE";
            
            if (id.length() > 0){
                finalQuery += " subject_id " + idCB.getSelectedItem() + " " + id;
                first = false;
            }
            
            if (units.length() > 0){
                if (!first){
                    finalQuery += " " + units_CB;
                }
                first = false;
                finalQuery += " subject_units" + units_CB2.getSelectedItem() + " " + units;
            }
            
//            if (enrolled.length() > 0){
//                if (!first){
//                    finalQuery += " " + enrolled_CB;
//                    first = false;
//                }
//                finalQuery += " subject"
//            }
            
            //add elements to arraylist
            if (Scode.length() > 0){
                codeArr.add("subject_code LIKE '" + Scode + "%'");
            }
            
            if (Ecode.length() > 0){
                codeArr.add("subject_code LIKE '%" + Ecode + "'");
            }
            
            if (Sdesc.length() > 0){
                descArr.add("subject_desc LIKE '" + Sdesc + "%'");
            }
            
            if (Edesc.length() > 0){
                descArr.add("subject_desc LIKE '%" + Edesc + "'");
            }
           
            
            //add arraylist elements to finalQuery
            if (codeArr.size() > 0){
                if (!first){
                    finalQuery += " " + code_CB.getSelectedItem().toString();
                }
                first = false;
                finalQuery += " (" + String.join("AND ", codeArr) + ")";
            }
            
            if (descArr.size() > 0){
                if (!first){
                    finalQuery +=  " " + desc_CB.getSelectedItem().toString();
                }
                first = false;
                finalQuery += " (" + String.join("AND ",descArr) + ")";
            }
            
            if (sched.length() > 0){
                if (!first){
                    finalQuery += " " + sched_CB.getSelectedItem().toString();
                }
                first = false;
                finalQuery += " subject_sched LIKE '" + sched + "%'";
            }
            
            
        }
        
//        System.out.println(finalQuery);
        String filterQuery = finalQuery;
        finalQuery = "SELECT * FROM subjects" + finalQuery;
        
        try{
            ResultSet rsSubjectTable = EnrollmentSystem.con.createStatement().executeQuery(finalQuery);
            ResultSet rsEnrolled = EnrollmentSystem.con.createStatement().executeQuery("SELECT subjects.subject_id AS id, "
                    + "(SELECT COUNT(*) FROM students, enroll, subjects "
                    + "WHERE students.student_id = enroll.student_id and enroll.subject_id = subjects.subject_id and enroll.subject_id = id) "
                    + "AS enrolled FROM subjects " + filterQuery);
            
            while (rsSubjectTable.next()){
                rsEnrolled.next();
                String idd = rsSubjectTable.getString("subject_id");
                String cd = rsSubjectTable.getString("subject_code");
                String ds = rsSubjectTable.getString("subject_desc");
                String un = rsSubjectTable.getString("subject_units");
                String sc = rsSubjectTable.getString("subject_sched");
                String er = rsEnrolled.getString("enrolled");
                
                subjectTableModel.addRow(new String[]{idd, cd, ds, un, sc, er});
                
            }

            
        }catch(Exception ex){
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(subjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new subjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ecode_TF;
    private javax.swing.JTextField Edesc_TF;
    private javax.swing.JTextField ID_TF;
    private javax.swing.JTextField Scode_TF;
    private javax.swing.JTextField Sdesc_TF;
    private javax.swing.JTextField SubjectCode;
    private javax.swing.JTextField SubjectDesc;
    private javax.swing.JTextField SubjectSched;
    private javax.swing.JTextField SubjectUnit;
    private javax.swing.JTable classTable;
    private javax.swing.JComboBox<String> code_CB;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> desc_CB;
    private javax.swing.JComboBox<String> idCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox<String> sched_CB;
    private javax.swing.JTextField sched_TF;
    private javax.swing.JTextField subjectID;
    public static javax.swing.JTable subjectTable;
    private javax.swing.JComboBox<String> units_CB;
    private javax.swing.JComboBox<String> units_CB2;
    private javax.swing.JTextField units_TF;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
