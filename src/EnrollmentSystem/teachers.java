/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EnrollmentSystem;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class teachers extends javax.swing.JFrame {

    /**
     * Creates new form teachers
     */
    String finalQuery = "";
    public teachers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        teacherSubjectsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        teacherContact = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        id_CB = new javax.swing.JComboBox<String>();
        ID_TF = new javax.swing.JTextField();
        name_CB = new javax.swing.JComboBox<String>();
        jLabel13 = new javax.swing.JLabel();
        Sname_TF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Ename_TF = new javax.swing.JTextField();
        Sdepartment_TF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        department_CB = new javax.swing.JComboBox<String>();
        Edepartment_TF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        status_CB = new javax.swing.JComboBox<String>();
        status_TF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Saddress_TF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        address_CB = new javax.swing.JComboBox<String>();
        Eaddress_TF = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        Scontact_TF = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        contact_CB = new javax.swing.JComboBox<String>();
        Econtact_TF = new javax.swing.JTextField();
        teacherName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        teacherTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        teacherAddress = new javax.swing.JTextField();
        teacherID = new javax.swing.JTextField();
        teacherDepartment = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        teacherStatus = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        addTeacherSubjectBtn = new javax.swing.JButton();
        dropTeacherSubjectBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel23.setText("Assigned Subjects");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Contact #");

        teacherSubjectsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject ID", "Subject Code", "Subject Desc.", "Subject Units", "Subject Sched"
            }
        ));
        teacherSubjectsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teacherSubjectsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(teacherSubjectsTable);

        jLabel2.setText("Teacher Name");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filter", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel7.setText("Teacher ID");

        jLabel8.setText("Teacher Name");

        jLabel9.setText("Department");

        jLabel11.setText("Status");

        id_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<>", "<", ">", "<=", ">=" }));
        id_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_CBActionPerformed(evt);
            }
        });

        ID_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_TFActionPerformed(evt);
            }
        });
        ID_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ID_TFKeyReleased(evt);
            }
        });

        name_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        name_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_CBActionPerformed(evt);
            }
        });

        jLabel13.setText("Starts");

        Sname_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sname_TFActionPerformed(evt);
            }
        });
        Sname_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sname_TFKeyReleased(evt);
            }
        });

        jLabel14.setText("Ends");

        Ename_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ename_TFActionPerformed(evt);
            }
        });
        Ename_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Ename_TFKeyReleased(evt);
            }
        });

        Sdepartment_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdepartment_TFActionPerformed(evt);
            }
        });
        Sdepartment_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Sdepartment_TFKeyReleased(evt);
            }
        });

        jLabel16.setText("Starts");

        department_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        department_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                department_CBActionPerformed(evt);
            }
        });

        Edepartment_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edepartment_TFActionPerformed(evt);
            }
        });
        Edepartment_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Edepartment_TFKeyReleased(evt);
            }
        });

        jLabel15.setText("Ends");

        status_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        status_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                status_CBActionPerformed(evt);
            }
        });

        status_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                status_TFActionPerformed(evt);
            }
        });
        status_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                status_TFKeyReleased(evt);
            }
        });

        jLabel17.setText("Ends");

        Saddress_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Saddress_TFActionPerformed(evt);
            }
        });
        Saddress_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Saddress_TFKeyReleased(evt);
            }
        });

        jLabel12.setText("Address");

        jLabel18.setText("Starts");

        address_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        address_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_CBActionPerformed(evt);
            }
        });

        Eaddress_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eaddress_TFActionPerformed(evt);
            }
        });
        Eaddress_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Eaddress_TFKeyReleased(evt);
            }
        });

        jLabel19.setText("Ends");

        Scontact_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Scontact_TFActionPerformed(evt);
            }
        });
        Scontact_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Scontact_TFKeyReleased(evt);
            }
        });

        jLabel20.setText("Contact #");

        jLabel21.setText("Starts");

        contact_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OR", "AND" }));
        contact_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_CBActionPerformed(evt);
            }
        });

        Econtact_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Econtact_TFActionPerformed(evt);
            }
        });
        Econtact_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Econtact_TFKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(status_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(status_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(26, 26, 26)
                        .addComponent(id_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ID_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(name_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(Sname_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(Ename_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(department_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(Sdepartment_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(Edepartment_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(address_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(Saddress_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(Eaddress_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(contact_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(Scontact_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(Econtact_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ID_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(name_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Sname_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(Ename_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(department_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(Sdepartment_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(Edepartment_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(address_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(Saddress_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(Eaddress_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(contact_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Scontact_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(Econtact_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(status_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel1.setText("Teacher ID");

        teacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher ID", "Teacher Name", "Departiment", "Address", "Contact #", "Status", "Assigned"
            }
        ));
        teacherTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teacherTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                teacherTableMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(teacherTable);

        jLabel3.setText("Department");

        jLabel4.setText("Address");

        jLabel6.setText("Status");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Assign", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        addTeacherSubjectBtn.setText("Add Subject");
        addTeacherSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherSubjectBtnActionPerformed(evt);
            }
        });

        dropTeacherSubjectBtn.setText("Drop Subject");
        dropTeacherSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropTeacherSubjectBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTeacherSubjectBtn)
                    .addComponent(dropTeacherSubjectBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(addTeacherSubjectBtn)
                .addGap(29, 29, 29)
                .addComponent(dropTeacherSubjectBtn)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("Teacher's Form");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveBtn)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(44, 44, 44)
                            .addComponent(teacherStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(teacherID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(teacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(teacherDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(teacherAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(teacherContact, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jLabel23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(teacherID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(teacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(teacherDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(teacherAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(teacherContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(teacherStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(saveBtn)
                                .addGap(18, 18, 18)
                                .addComponent(deleteBtn)
                                .addGap(18, 18, 18)
                                .addComponent(updateBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jLabel23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        if (teacherID.getText().length() > 0 && teacherName.getText().length() > 0 && teacherDepartment.getText().length() > 0 && teacherAddress.getText().length() > 0 && teacherContact.getText().length() > 0 && teacherStatus.getText().length() > 0){        
            String query = "INSERT INTO teachers VALUES (?, ?, ?, ?, ?, ?)";
            try{
                ResultSet rs = EnrollmentSystem.con.createStatement().executeQuery("SELECT * FROM teachers WHERE teacher_id = '" + teacherID.getText() + "'");
                if (rs.next()){
                    JOptionPane.showMessageDialog(this,"Teacher ID already exist! please choose another one", "Error", JOptionPane.ERROR_MESSAGE);
                }else{
                    PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);

                    st.setInt(1, Integer.parseInt(teacherID.getText()));
                    st.setString(2, teacherName.getText());
                    st.setString(3, teacherDepartment.getText());
                    st.setString(4, teacherAddress.getText());
                    st.setString(5, teacherContact.getText());
                    st.setString(6, teacherStatus.getText());

                    createTeacherUser();
                    st.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Teacher Successfully Saved");
                    updateTableTeachers();
                }

            }catch(Exception ex){
                if (ex instanceof NumberFormatException){
                    JOptionPane.showMessageDialog(this,"Please put numeric value in the ID");
                }
            }

            
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void createTeacherUser(){
        String username = teacherID.getText() + teacherName.getText();
        String password = "t" + username;
        String query =  String.format("CREATE USER '%s'@'localhost' IDENTIFIED BY '%s'", username, password);
        String query2 = String.format("GRANT ALL PRIVILEGES ON %s.* TO '%s'@'localhost'", Login.loggedDatabase, username);
        
        try{
            EnrollmentSystem.con.prepareStatement(query).executeUpdate();
        }catch(Exception ex){
            System.out.println(ex);
        }
        
        try{
            EnrollmentSystem.con.prepareStatement(query2).executeUpdate();
            
        }catch(Exception ex){
            
        }
        
    }
    
    
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        try{
            String condition = "";
            String query = "DELETE FROM teachers";
            if ((finalQuery.equals("SELECT * FROM teachers") || finalQuery.equals("")) && teacherTable.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(this,"Please select a row to delete", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if (teacherTable.getSelectedRowCount() > 0){
                int idx = teacherTable.getSelectedRow();
                condition = " WHERE teacher_id = " + teacherTable.getValueAt(idx, 0).toString();
                query += condition;
                deleteTeacherUser(condition);
                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.executeUpdate();
                JOptionPane.showMessageDialog(this,"Teacher Successfully deleted");
                filter();
            }
            else{
                condition = " WHERE teacher_id in (select teacher_id from (" + finalQuery + ") as x)";
                query += condition;
                deleteTeacherUser(condition);
                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.executeUpdate();
                JOptionPane.showMessageDialog(this,"Teacher Successfully deleted");
                filter();
            }

        }catch(Exception ex){
            System.out.println(ex.getStackTrace()[0]);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void deleteTeacherUser(String condition){
        String selectQuery = "SELECT * FROM teachers" + condition;
        
        try{
            ResultSet rs = EnrollmentSystem.con.createStatement().executeQuery(selectQuery);
            while (rs.next()){
                String id = rs.getString("teacher_id");
                String name = rs.getString("teacher_name");
                String query = String.format("DROP USER '%s'@'localhost'",id+name);
                EnrollmentSystem.con.prepareStatement(query).executeUpdate();
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
        
    }
    
    
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:

        try{
            ResultSet rs = EnrollmentSystem.con.createStatement().executeQuery("SELECT * FROM teachers WHERE teacher_id = '" + teacherID.getText() + "'");
            
            if (rs.next() && (!teacherID.getText().equals(teacherTable.getValueAt(teacherTable.getSelectedRow(), 0)))){
                JOptionPane.showMessageDialog(this,"Teacher ID already exist! please choose another one", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                String query = "UPDATE teachers SET";
                ArrayList<String> includes = new ArrayList<>();

                if (teacherID.getText().length() > 0){
                    includes.add(" teacher_id = " + teacherID.getText());
                }

                if (teacherName.getText().length() > 0){
                    includes.add(" teacher_name = '" + teacherName.getText() + "'");
                }

                if (teacherDepartment.getText().length() > 0){
                    includes.add(" teacher_department = '" + teacherDepartment.getText() + "'");
                }

                if (teacherAddress.getText().length() > 0){
                    includes.add(" teacher_address = '" + teacherAddress.getText() + "'");
                }

                if (teacherContact.getText().length() > 0){
                    includes.add(" teacher_contact = '" + teacherContact.getText() + "'");
                }

                if (teacherStatus.getText().length() > 0){
                    includes.add(" teacher_status = '" + teacherStatus.getText() + "'");
                }

                query += String.join(",", includes);

                if (teacherTable.getSelectedRowCount() > 0){
                    int idx = teacherTable.getSelectedRow();
                    query +=  " WHERE teacher_id = " + teacherTable.getValueAt(idx, 0).toString();

                }else{
                    query += " WHERE teacher_id in (select teacher_id from (" + finalQuery + ") as x)";
                }

                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.executeUpdate();
                JOptionPane.showMessageDialog(this,"Teacher Successfully Updated");
                filter();
            }
        }catch(Exception ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void teacherSubjectsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teacherSubjectsTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherSubjectsTableMouseClicked

    private void id_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_CBActionPerformed
        filter();
    }//GEN-LAST:event_id_CBActionPerformed

    private void ID_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID_TFKeyReleased
        filter();
    }//GEN-LAST:event_ID_TFKeyReleased

    private void name_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_CBActionPerformed
        filter();
    }//GEN-LAST:event_name_CBActionPerformed

    private void Sname_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sname_TFKeyReleased
        filter();
    }//GEN-LAST:event_Sname_TFKeyReleased

    private void Ename_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Ename_TFKeyReleased
        filter();
    }//GEN-LAST:event_Ename_TFKeyReleased

    private void Sdepartment_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Sdepartment_TFKeyReleased
        filter();
    }//GEN-LAST:event_Sdepartment_TFKeyReleased

    private void department_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_department_CBActionPerformed
        filter();
    }//GEN-LAST:event_department_CBActionPerformed

    private void Edepartment_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Edepartment_TFKeyReleased
        filter();
    }//GEN-LAST:event_Edepartment_TFKeyReleased

    private void status_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_status_CBActionPerformed
        filter();
    }//GEN-LAST:event_status_CBActionPerformed

    private void status_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_status_TFKeyReleased
        filter();
    }//GEN-LAST:event_status_TFKeyReleased

    private void teacherTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teacherTableMouseClicked
        // TODO add your handling code here:
        int idx = teacherTable.getSelectedRow();

        teacherID.setText(teacherTable.getValueAt(idx, 0).toString());
        teacherName.setText(teacherTable.getValueAt(idx, 1).toString());
        teacherDepartment.setText(teacherTable.getValueAt(idx, 2).toString());
        teacherAddress.setText(teacherTable.getValueAt(idx, 3).toString());
        teacherContact.setText(teacherTable.getValueAt(idx, 4).toString());
        teacherStatus.setText(teacherTable.getValueAt(idx, 5).toString());
        
        updateTeacherSubjectsTable();
    }//GEN-LAST:event_teacherTableMouseClicked

    private void Saddress_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Saddress_TFKeyReleased
        filter();
    }//GEN-LAST:event_Saddress_TFKeyReleased

    private void address_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_CBActionPerformed
        filter();
    }//GEN-LAST:event_address_CBActionPerformed

    private void Eaddress_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Eaddress_TFKeyReleased
        filter();
    }//GEN-LAST:event_Eaddress_TFKeyReleased

    private void Scontact_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Scontact_TFKeyReleased
        filter();
    }//GEN-LAST:event_Scontact_TFKeyReleased

    private void contact_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_CBActionPerformed
        filter();
    }//GEN-LAST:event_contact_CBActionPerformed

    private void Econtact_TFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Econtact_TFKeyReleased
        filter();
    }//GEN-LAST:event_Econtact_TFKeyReleased

    private void ID_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_TFActionPerformed
        filter();
    }//GEN-LAST:event_ID_TFActionPerformed

    private void Sname_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sname_TFActionPerformed
        filter();
    }//GEN-LAST:event_Sname_TFActionPerformed

    private void Ename_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ename_TFActionPerformed
        filter();
    }//GEN-LAST:event_Ename_TFActionPerformed

    private void Sdepartment_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdepartment_TFActionPerformed
        filter();
    }//GEN-LAST:event_Sdepartment_TFActionPerformed

    private void Edepartment_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edepartment_TFActionPerformed
        filter();
    }//GEN-LAST:event_Edepartment_TFActionPerformed

    private void Saddress_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Saddress_TFActionPerformed
        filter();
    }//GEN-LAST:event_Saddress_TFActionPerformed

    private void Eaddress_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eaddress_TFActionPerformed
        filter();
    }//GEN-LAST:event_Eaddress_TFActionPerformed

    private void Scontact_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Scontact_TFActionPerformed
        filter();
    }//GEN-LAST:event_Scontact_TFActionPerformed

    private void Econtact_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Econtact_TFActionPerformed
        filter();
    }//GEN-LAST:event_Econtact_TFActionPerformed

    private void status_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_status_TFActionPerformed
        filter();
    }//GEN-LAST:event_status_TFActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        updateTableTeachers();
    }//GEN-LAST:event_formWindowOpened

    private void addTeacherSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherSubjectBtnActionPerformed
        if (teacherTable.getSelectedRowCount() > 0 && subjects.subjectTable.getSelectedRowCount() > 0){
            int teacherRow = teacherTable.getSelectedRow();
            int subjectRow = subjects.subjectTable.getSelectedRow();

            String teacherTableValue = teacherTable.getValueAt(teacherRow, 0).toString();
            String subjectTableValue = subjects.subjectTable.getValueAt(subjectRow, 0).toString();

            String query = "INSERT INTO assign(teacher_id, subject_id) VALUES (?, ?)";
            try{
                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);

                st.setString(1, teacherTableValue);
                st.setString(2, subjectTableValue);

                st.executeUpdate();
            }catch(Exception ex){

            }
            updateTeacherSubjectsTable();
        }else{
            JOptionPane.showMessageDialog(this,"Please select a row from Teacher and Subject table", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addTeacherSubjectBtnActionPerformed

    private void teacherTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teacherTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherTableMouseEntered

    private void dropTeacherSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropTeacherSubjectBtnActionPerformed
        
        if (teacherSubjectsTable.getSelectedRowCount() > 0){
            int idx = teacherTable.getSelectedRow();
            int idx2 = teacherSubjectsTable.getSelectedRow();
            String query = "DELETE FROM assign WHERE assign.teacher_id = ? AND assign.subject_id = ?";
            try{
                PreparedStatement st = EnrollmentSystem.con.prepareStatement(query);
                st.setInt(1, Integer.parseInt(teacherTable.getValueAt(idx, 0).toString()));
                st.setInt(2, Integer.parseInt(teacherSubjectsTable.getValueAt(idx2, 0).toString()));

                st.executeUpdate();


            }catch(Exception ex){

            }
            updateTeacherSubjectsTable();
        }else{
            JOptionPane.showMessageDialog(this,"Please select a row from the Assigned Subjects table", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_dropTeacherSubjectBtnActionPerformed
    
    public void updateTeacherSubjectsTable(){
        
        int idx = teacherTable.getSelectedRow();
        DefaultTableModel teacherSubjectsTableModel = (DefaultTableModel) teacherSubjectsTable.getModel();
        teacherSubjectsTableModel.setRowCount(0);
        
        try{
            ResultSet rsAssigntTable = EnrollmentSystem.con.createStatement().executeQuery(
                    "SELECT subjects.subject_id, subject_code, subject_desc, subject_units, subject_sched "
                    + "FROM teachers, assign, subjects "
                    + "WHERE teachers.teacher_id = assign.teacher_id and assign.subject_id = subjects.subject_id and teachers.teacher_id = " + teacherTable.getValueAt(idx, 0));
            
            while (rsAssigntTable.next()){
                String id = rsAssigntTable.getString("subject_id");
                String cd = rsAssigntTable.getString("subject_code");
                String dc = rsAssigntTable.getString("subject_desc");
                String un = rsAssigntTable.getString("subject_units");
                String sc = rsAssigntTable.getString("subject_sched");      
                
                teacherSubjectsTableModel.addRow(new String[]{id, cd, dc, un, sc});               
            } 
        }catch(Exception ex){
            
        }
    }
    
    
    public void updateTableTeachers(){
        
        DefaultTableModel studentTableModel = (DefaultTableModel) teacherTable.getModel();

        studentTableModel.setRowCount(0);
        try{
            ResultSet rsTeacherTable = EnrollmentSystem.con.createStatement().executeQuery("SELECT * FROM teachers");
            ResultSet rsAssigned = EnrollmentSystem.con.createStatement().executeQuery("SELECT teachers.teacher_id AS id, "
                    + "(SELECT COUNT(*) FROM teachers, assign, subjects "
                    + "WHERE teachers.teacher_id = assign.teacher_id and assign.subject_id = subjects.subject_id and assign.teacher_id = id) "
                    + "AS teacherSubjects FROM teachers");
            
            while (rsTeacherTable.next()){
                rsAssigned.next();
                String idd = rsTeacherTable.getString("teacher_id");
                String nm = rsTeacherTable.getString("teacher_name");
                String dp = rsTeacherTable.getString("teacher_department");
                String ad = rsTeacherTable.getString("teacher_address");
                String ct = rsTeacherTable.getString("teacher_contact");
                String st = rsTeacherTable.getString("teacher_status");
                String ts = rsAssigned.getString("teacherSubjects");
                
                studentTableModel.addRow(new String[]{idd, nm, dp, ad, ct, st, ts});
                
            }
  
        }catch(Exception ex){
            
        }
        
    }
    
    public void filter(){
        DefaultTableModel studentTableModel = (DefaultTableModel) teacherTable.getModel();
        studentTableModel.setRowCount(0);

        
        finalQuery = "";
        boolean first = true;
        
        String id = ID_TF.getText();
        String Sname = Sname_TF.getText();
        String Ename = Ename_TF.getText();
        String Sdepartment = Sdepartment_TF.getText();
        String Edepartment = Edepartment_TF.getText();
        String Saddress = Saddress_TF.getText();
        String Eaddress = Eaddress_TF.getText();
        String Scontact = Scontact_TF.getText();
        String Econtact = Econtact_TF.getText();
        String status = status_TF.getText();
        
        ArrayList<String> nameArr = new ArrayList<>();
        ArrayList<String> departmentArr = new ArrayList<>();
        ArrayList<String> addressArr = new ArrayList<>();
        ArrayList<String> contactArr = new ArrayList<>();
        
        
        
        if (id.length() > 0 || Sname.length() > 0 || Ename.length() > 0 || Sdepartment.length() > 0 || Edepartment.length() > 0 || Saddress.length() > 0 || Eaddress.length() > 0 || Scontact.length() > 0 || Econtact.length() > 0 || status.length() > 0){
            
            finalQuery += " WHERE";
            
            if (id.length() > 0){
                finalQuery += " teacher_id " + id_CB.getSelectedItem() + " " + id;
                first = false;
            }
            
            //add elements to arraylist
            if (Sname.length() > 0){
                nameArr.add("teacher_name LIKE '" + Sname + "%'");
            }
            
            if (Ename.length() > 0){
                nameArr.add("teacher_name LIKE '%" + Ename + "'");
            }
            
            if (Sdepartment.length() > 0){
                departmentArr.add("teacher_department LIKE '" + Sdepartment + "%'");
            }
            
            if (Edepartment.length() > 0){
                departmentArr.add("teacher_department LIKE '%" + Edepartment + "'");
            }
            
            if (Saddress.length() > 0){
                addressArr.add("teacher_address LIKE '" + Saddress + "%'");
            }
            
            if (Eaddress.length() > 0){
                addressArr.add("teacher_address LIKE '%" + Eaddress + "'");
            }
            
            
            if (Scontact.length() > 0){
                contactArr.add("teacher_contact LIKE '" + Scontact + "%'");
            }
            
            if (Econtact.length() > 0){
                contactArr.add("teacher_contact LIKE '%" + Econtact + "'");
            }
            
            
            //add arraylist elements to finalQuery
            if (nameArr.size() > 0){
                if (!first){
                    finalQuery += " " + name_CB.getSelectedItem().toString();
                    first = false;
                }
                
                finalQuery += " (" + String.join("AND ", nameArr) + ")";
            }
            
            if (departmentArr.size() > 0){
                if (!first){
                    finalQuery += " " + department_CB.getSelectedItem().toString();
                    first = false;
                }
                
                finalQuery += " (" + String.join("AND ", departmentArr) + ")";
            }
            
            if (addressArr.size() > 0){
                if (!first){
                    finalQuery +=  " " + department_CB.getSelectedItem().toString();
                    first = false;
                }
                
                finalQuery += " (" + String.join("AND ",addressArr) + ")";
            }
            

            
            if (contactArr.size() > 0){
                if (!first){
                    finalQuery += " " + contact_CB.getSelectedItem().toString();
                    first = false;
                }
                
                finalQuery += " (" + String.join("AND ", contactArr) + ")";
            }
            
            if (status.length() > 0){
                if (!first){
                    finalQuery += " " + status_CB.getSelectedItem().toString();
                    first = false;
                }
                finalQuery += " teacher_status LIKE '" + status + "%'";
            }
            
        }
        
        System.out.println(finalQuery);
        
        String filterQuery = finalQuery;
        
        finalQuery = "SELECT * FROM teachers" + finalQuery;
        
        try{
            ResultSet rsTeacherTable = EnrollmentSystem.con.createStatement().executeQuery(finalQuery);
            ResultSet rsAssigned = EnrollmentSystem.con.createStatement().executeQuery("SELECT teachers.teacher_id AS id, "
                    + "(SELECT COUNT(*) FROM teachers, assign, subjects "
                    + "WHERE teachers.teacher_id = assign.teacher_id and assign.subject_id = subjects.subject_id and assign.teacher_id = id) "
                    + "AS teacherSubjects FROM teachers " + filterQuery);
            
            while (rsTeacherTable.next()){
                rsAssigned.next();
                String idd = rsTeacherTable.getString("teacher_id");
                String nm = rsTeacherTable.getString("teacher_name");
                String dp = rsTeacherTable.getString("teacher_department");
                String ad = rsTeacherTable.getString("teacher_address");
                String ct = rsTeacherTable.getString("teacher_contact");
                String st = rsTeacherTable.getString("teacher_status");
                String ts = rsAssigned.getString("teacherSubjects");
                
                studentTableModel.addRow(new String[]{idd, nm, dp, ad, ct, st, ts});
                
            }

            
        }catch(Exception ex){
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teachers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teachers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Eaddress_TF;
    private javax.swing.JTextField Econtact_TF;
    private javax.swing.JTextField Edepartment_TF;
    private javax.swing.JTextField Ename_TF;
    private javax.swing.JTextField ID_TF;
    private javax.swing.JTextField Saddress_TF;
    private javax.swing.JTextField Scontact_TF;
    private javax.swing.JTextField Sdepartment_TF;
    private javax.swing.JTextField Sname_TF;
    private javax.swing.JButton addTeacherSubjectBtn;
    private javax.swing.JComboBox<String> address_CB;
    private javax.swing.JComboBox<String> contact_CB;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> department_CB;
    private javax.swing.JButton dropTeacherSubjectBtn;
    private javax.swing.JComboBox<String> id_CB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> name_CB;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox<String> status_CB;
    private javax.swing.JTextField status_TF;
    private javax.swing.JTextField teacherAddress;
    private javax.swing.JTextField teacherContact;
    private javax.swing.JTextField teacherDepartment;
    private javax.swing.JTextField teacherID;
    private javax.swing.JTextField teacherName;
    private javax.swing.JTextField teacherStatus;
    private javax.swing.JTable teacherSubjectsTable;
    private javax.swing.JTable teacherTable;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
